[{"/Users/tonili/Desktop/fydp-app/src/index.js":"1","/Users/tonili/Desktop/fydp-app/src/reportWebVitals.js":"2","/Users/tonili/Desktop/fydp-app/src/App.js":"3","/Users/tonili/Desktop/fydp-app/src/components/startSaving.js":"4","/Users/tonili/Desktop/fydp-app/src/components/mainHomepage.js":"5","/Users/tonili/Desktop/fydp-app/src/components/SolarFAQ.js":"6","/Users/tonili/Desktop/fydp-app/src/components/About.js":"7","/Users/tonili/Desktop/fydp-app/src/components/scrollTo.js":"8","/Users/tonili/Desktop/fydp-app/src/components/Navbar.js":"9","/Users/tonili/Desktop/fydp-app/src/components/Footer.js":"10"},{"size":500,"mtime":1610990631000,"results":"11","hashOfConfig":"12"},{"size":362,"mtime":1610990631000,"results":"13","hashOfConfig":"12"},{"size":1101,"mtime":1613068082000,"results":"14","hashOfConfig":"12"},{"size":41278,"mtime":1614542880997,"results":"15","hashOfConfig":"12"},{"size":2958,"mtime":1614541226677,"results":"16","hashOfConfig":"12"},{"size":414,"mtime":1614291815323,"results":"17","hashOfConfig":"12"},{"size":407,"mtime":1613495529000,"results":"18","hashOfConfig":"12"},{"size":264,"mtime":1612114110000,"results":"19","hashOfConfig":"12"},{"size":2443,"mtime":1613758992000,"results":"20","hashOfConfig":"12"},{"size":419,"mtime":1614542141047,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"h36v6z",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":59,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"24"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},"/Users/tonili/Desktop/fydp-app/src/index.js",[],["47","48"],"/Users/tonili/Desktop/fydp-app/src/reportWebVitals.js",[],"/Users/tonili/Desktop/fydp-app/src/App.js",["49","50"],"import React, { useState, useEffect } from 'react';\nimport './App.css';\n\n\nimport {\n  BrowserRouter as Router,\n  Route, Switch\n  } from \"react-router-dom\";\n  import Navbar from './components/Navbar';\n  import MainHomepage from './components/mainHomepage';\n  import ScrollTo from './components/scrollTo';\n  import StartSaving from './components/startSaving';\n  import About from './components/About';\n  import SolarFAQ from './components/SolarFAQ';\n\n\nfunction App() {\n  // const [currentTime, setCurrentTime] = useState(0);\n  \n  // useEffect(() => {\n  //   fetch('/time').then(res => res.json()).then(data => {\n  //     setCurrentTime(data.time);\n  //   });\n  // }, []);\n\n  return (\n    <Router>\n    <div className=\"App\">\n      <Navbar />\n      <ScrollTo />\n\n      <Switch>\n        <Route path=\"/start-saving\" component={StartSaving}/>\n        <Route path=\"/FAQ\" component={SolarFAQ}/>\n        <Route path=\"/about\" component={About}/>\n        <Route path=\"/\" component={MainHomepage}/>\n      </Switch>\n    </div>\n    </Router>\n  );\n}\n\nexport default App;\n//    <p>The current time is {currentTime}.</p>\n","/Users/tonili/Desktop/fydp-app/src/components/startSaving.js",["51","52","53","54","55","56","57","58","59","60","61","62","63","64","65","66","67","68","69","70","71","72","73","74","75","76","77","78","79","80","81","82","83","84","85","86","87","88","89","90","91","92","93","94","95","96","97","98","99","100","101","102","103","104","105","106","107","108","109"],"import React, { Component } from 'react'\nimport graphic from '../question_img.png'\nimport warning from '../warning.png'\nimport Footer from '../components/Footer'\n\nclass startSaving extends Component {\n    render() {\n        window.onbeforeunload = function() {\n            var defaultForm = \"solar\";\n            localStorage.setItem(\"whichForm\", defaultForm);\n            var solarTab = document.getElementById(\"tabs1\");\n            var batteryTab = document.getElementById(\"tabs2\");\n\n            solarTab.classList.add(\"active\");\n            batteryTab.classList.remove(\"active\");\n            document.getElementById('tabs-2').style.display = 'none';\n            document.getElementById('tabs2').style.fontWeight = 400;\n            document.getElementById('tabs-1').style.display = 'block';\n            document.getElementById('tabs1').style.fontWeight = 600;\n        }\n\n        // switching between tabs\n        var tabs = document.getElementsByClassName('Tab');\n        window.addEventListener('load', function () {\n            // switching tab if returning from battery results page\n            var whichForm = localStorage.getItem(\"whichForm\")\n            var solarTab = document.getElementById(\"tabs1\");\n            var batteryTab = document.getElementById(\"tabs2\");\n            window.scrollTo(0, 0);\n\n            console.log(whichForm);\n            if (whichForm == \"battery\") {\n                solarTab.classList.remove(\"active\");\n                batteryTab.classList.add(\"active\");\n                document.getElementById('tabs-1').style.display = 'none';\n                document.getElementById('tabs1').style.fontWeight = 400;\n                document.getElementById('tabs-2').style.display = 'block';\n                document.getElementById('tabs2').style.fontWeight = 600;\n            }\n\n            Array.prototype.forEach.call(tabs, function (tab) {\n                tab.addEventListener('click', setActiveClass);\n            });\n        });\n        function setActiveClass(evt) {\n            Array.prototype.forEach.call(tabs, function (tab) {\n                tab.classList.remove('active');\n            });\n\n            evt.currentTarget.classList.add('active');\n        }\n        function showTab(selected, total) {\n            var i;\n            for (i = 1; i <= total; i += 1) {\n                document.getElementById('tabs-' + i).style.display = 'none';\n                document.getElementById('tabs' + i).style.fontWeight = 400;\n            }\n            document.getElementById('tabs-' + selected).style.display = 'block';\n            document.getElementById('tabs' + selected).style.fontWeight = 600;\n        }\n\n        // buttons for increasing and decreasing budget input on Solar form\n        function increaseValue() {\n            var value = parseInt(document.getElementById('budget1').value, 10);\n            value = isNaN(value) ? 0 : value;\n            value = value + 500;\n            document.getElementById('budget1').value = value;\n        }\n        function decreaseValue() {\n            var value = parseInt(document.getElementById('budget1').value, 10);\n            value = isNaN(value) ? 0 : value;\n            if (value >= 500) {\n                value = value - 500;\n            }\n            document.getElementById('budget1').value = value;\n        }\n        // buttons for increasing and decreasing budget input on Solar+Battery form\n        function increaseValue2() {\n            var value = parseInt(document.getElementById('budget2').value, 10);\n            value = isNaN(value) ? 0 : value;\n            value = value + 500;\n            document.getElementById('budget2').value = value;\n        }\n        function decreaseValue2() {\n            var value = parseInt(document.getElementById('budget2').value, 10);\n            value = isNaN(value) ? 0 : value;\n            if (value >= 500) {\n                value = value - 500;\n            }\n            document.getElementById('budget2').value = value;\n        }\n\n        // check values for Solar form and alert user of default values being used\n        function checkSolarValues() {\n            var modal = document.getElementById(\"solarModal\");\n            var update = document.getElementById(\"solar-update\");\n            var nav = document.getElementById(\"navigation\"); \n\n            var postalCode = document.forms[\"solar\"][\"postal_code\"].value;\n            var roofSize = document.forms[\"solar\"][\"roof_size\"].value;\n            var elecUsage = document.forms[\"solar\"][\"elec-usage\"].value;\n            var month = document.forms[\"solar\"][\"month\"].value;\n            var heating = document.forms[\"solar\"][\"heating-type\"].value;\n            var budget = document.forms[\"solar\"][\"budget\"].value;\n\n            if (postalCode == \"\" || roofSize == \"\" || elecUsage == \"\" || month == \"\" || heating == \"\" || budget == \"\") {\n                modal.style.display = \"block\";\n                update.onclick = function () {\n                    modal.style.display = \"none\";\n                }\n                window.onclick = function (event) {\n                    if (event.target == modal) {\n                        modal.style.display = \"none\";\n                    }\n                }\n            }\n        }\n        function isLetter(char) {\n            return (/[a-zA-Z]/).test(char);\n        }\n        function isNumber(char) {\n            return (/[0-9]/).test(char);\n        }\n        function checkingSolarInputs() {\n            var postalCodeBox = document.getElementById(\"postal-code-input1\");\n            var resultsButton = document.getElementById(\"results-button1\");\n            var postalCode = document.forms[\"solar\"][\"postal_code\"].value;\n            var postalError = false;\n            var numErrors = 0;\n\n            var split = [];\n            var i;\n            for (i=0; i<postalCode.length; i++) {\n                split[i] = postalCode.charAt([i]);\n            }\n\n            // checking if user input is a valid postal code\n            if (postalCode.length == 3 && isLetter(split[0]) == true && isNumber(split[1]) == true && isLetter(split[2]) == true) {\n                console.log(\"this is a valid postal code\");\n                postalCodeBox.classList.remove(\"invalid\");\n                postalError = false;\n                numErrors = Math.max(0, numErrors-1);\n            } else {\n                console.log(\"this is NOT a valid postal code\");\n                postalCodeBox.classList.add(\"invalid\");\n                postalError = true;\n                numErrors++;\n            }\n            if (postalCode.length == 0) {\n                postalCodeBox.classList.remove(\"invalid\");\n                postalError = false;\n                numErrors = Math.max(0, numErrors-1);\n            }\n\n            var roofSizeBox = document.getElementById(\"roof-size-input1\");\n            var roofSize = document.forms[\"solar\"][\"roof_size\"].value;\n            var roofError = false;\n\n            // checking to see if user inputted a number for solar roof size\n            if (Number(roofSize) && Number(roofSize) > 0) {\n                console.log(\"this is a valid roof size\");\n                roofSizeBox.classList.remove(\"invalid\");\n                roofError = false;\n                numErrors = Math.max(0, numErrors-1);\n            } else {\n                console.log(\"this is not a valid roof size\");\n                roofSizeBox.classList.add(\"invalid\");\n                roofError = true;\n                numErrors++;\n            }\n            if (roofSize.length == 0) {\n                roofSizeBox.classList.remove(\"invalid\");\n                roofError = false;\n                numErrors = Math.max(0, numErrors-1);\n            }\n\n            var usageBox = document.getElementById(\"elec-usage-input1\");\n            var usage = document.forms[\"solar\"][\"elec-usage\"].value;\n            var usageError = false;\n\n            // checking to see if user inputted a number for solar electricy usage\n            if (Number(usage) && Number(usage) >= 0) {\n                console.log(\"this is a valid usage amount\");\n                usageBox.classList.remove(\"invalid\");\n                usageError = false;\n                numErrors = Math.max(0, numErrors-1);\n            } else {\n                console.log(\"this is not a valid usage amount\");\n                usageBox.classList.add(\"invalid\");\n                usageError = true;\n                numErrors++;\n            }\n            if (usage.length == 0) {\n                usageBox.classList.remove(\"invalid\");\n                usageError = false;\n                numErrors = Math.max(0, numErrors-1);\n            }            \n\n            var budgetBox = document.getElementById(\"budget1\");\n            var budget = document.forms[\"solar\"][\"budget\"].value;\n            var budgetError = false;\n\n            // checking to see if user inputted a number greater than the cost of one panel + fixed costs\n            if (Number(budget) && Number(budget) >= 0) {\n                console.log(\"this is a valid budget amount\");\n                budgetBox.classList.remove(\"invalid\");\n                budgetError = false;\n                numErrors = Math.max(0, numErrors-1);\n            } else {\n                console.log(\"this is not a valid budget amount\");\n                budgetBox.classList.add(\"invalid\");\n                budgetError = true;\n                numErrors++;\n            }\n            if (budget.length == 0) {\n                budgetBox.classList.remove(\"invalid\");\n                budgetError = false;\n                numErrors = Math.max(0, numErrors-1);\n            }  \n\n            if (postalError == true || roofError == true || usageError == true || budgetError == true) {\n                resultsButton.classList.add(\"disabled-button\");\n            } else {\n                resultsButton.classList.remove(\"disabled-button\");\n            }\n\n            var warning = document.getElementById(\"error-warning\");\n            // moving the warning icon down as the size of the div increases\n            if (numErrors == 3) {\n                warning.classList.remove(\"other-errors\");\n                warning.classList.add(\"three-errors\");\n                warning.classList.remove(\"four-errors\");\n            } else if (numErrors == 4) {\n                warning.classList.remove(\"other-errors\");\n                warning.classList.remove(\"three-errors\");\n                warning.classList.add(\"four-errors\");\n            } else {\n                warning.classList.add(\"other-errors\");\n                warning.classList.remove(\"three-errors\");\n                warning.classList.remove(\"four-errors\");\n            }\n        }\n\n        function finalCheckSolarErrors() {\n            console.log(\"checking errors\");\n            var errorModal = document.getElementById(\"errorModal\");\n            var resultsButton = document.getElementById(\"results-button1\");\n            var postalCodeBox = document.getElementById(\"postal-code-input1\");\n            var roofSizeBox = document.getElementById(\"roof-size-input1\");\n            var usageBox = document.getElementById(\"elec-usage-input1\");\n            var budgetBox = document.getElementById(\"budget1\");\n            var errorText = document.getElementById(\"error-text\");\n            var update = document.getElementById(\"error-update\");\n\n            if (resultsButton.classList.contains(\"disabled-button\")) {\n                errorModal.style.display = \"block\";\n                // checking for postal code error\n                if (postalCodeBox.classList.contains(\"invalid\")) {\n                    errorText.innerHTML += \"Postal Code needs to be in the form of 'M3N'. <br><br>\"\n                }\n                // checking for roof size error\n                if (roofSizeBox.classList.contains(\"invalid\")) {\n                    errorText.innerHTML += \"Roof Size needs to be a number greater than 0 Sqft. <br><br>\"\n                }\n                // checking for usage error\n                if (usageBox.classList.contains(\"invalid\")) {\n                    errorText.innerHTML += \"Electricity Usage needs to be a number greater than 0 kWh. <br><br>\"\n                }\n                // checking for budget error\n                if (budgetBox.classList.contains(\"invalid\")) {\n                    errorText.innerHTML += \"Budget needs to be a number greater than $0.\"\n                }\n                update.onclick = function () {\n                    errorModal.style.display = \"none\";\n                    errorText.innerHTML = \"\";\n                }\n                window.onclick = function (event) {\n                    if (event.target == errorModal) {\n                        errorModal.style.display = \"none\";\n                        errorText.innerHTML = \"\";\n                    }\n                }\n            }\n        }\n        // check values for Battery form and alert user of default values being used\n        function checkBatteryValues() {\n            var modal = document.getElementById(\"batteryModal\");\n            var update = document.getElementById(\"battery-update\");\n\n            var postalCode = document.forms[\"battery\"][\"postal_code\"].value;\n            var roofSize = document.forms[\"battery\"][\"roof_size\"].value;\n            var elecUsage = document.forms[\"battery\"][\"elec-usage\"].value;\n            var month = document.forms[\"battery\"][\"month\"].value;\n            var heating = document.forms[\"battery\"][\"heating-type\"].value;\n            var batteryCap = document.forms[\"battery\"][\"storage_capacity\"].value;\n            var dod = document.forms[\"battery\"][\"dod\"].value;\n            var budget = document.forms[\"battery\"][\"budget\"].value;\n\n\n            if (postalCode == \"\" || roofSize == \"\" || elecUsage == \"\" || month == \"\" || heating == \"\" || batteryCap == \"\" || dod == \"\" || budget == \"\") {\n                modal.style.display = \"block\";\n                update.onclick = function () {\n                    modal.style.display = \"none\";\n                }\n                window.onclick = function (event) {\n                    if (event.target == modal) {\n                        modal.style.display = \"none\";\n                    }\n                }\n            }\n        }\n        function checkingBatteryInputs() {\n            var postalCodeBox = document.getElementById(\"postal-code-input2\");\n            var resultsButton = document.getElementById(\"results-button2\");\n            var postalCode = document.forms[\"battery\"][\"postal_code\"].value;\n            var postalError = false;\n\n            var numErrors = 0;\n\n            var split = [];\n            var i;\n            for (i=0; i<postalCode.length; i++) {\n                split[i] = postalCode.charAt([i]);\n            }\n\n            // checking if user input is a valid postal code\n            if (postalCode.length == 3 && isLetter(split[0]) == true && isNumber(split[1]) == true && isLetter(split[2]) == true) {\n                console.log(\"this is a valid postal code\");\n                postalCodeBox.classList.remove(\"invalid\");\n                postalError = false;\n                numErrors = Math.max(0, numErrors-1);\n            } else {\n                console.log(\"this is NOT a valid postal code\");\n                postalCodeBox.classList.add(\"invalid\");\n                postalError = true;\n                numErrors++;\n            }\n            if (postalCode.length == 0) {\n                postalCodeBox.classList.remove(\"invalid\");\n                postalError = false;\n                numErrors = Math.max(0, numErrors-1);\n            }\n\n            var roofSizeBox = document.getElementById(\"roof-size-input2\");\n            var roofSize = document.forms[\"battery\"][\"roof_size\"].value;\n            var roofError = false;\n\n            // checking to see if user inputted a number for solar roof size and that there is enough space for at least one panel (20sqft)\n            if (Number(roofSize) && Number(roofSize) >= 0) {\n                console.log(\"this is a valid roof size\");\n                roofSizeBox.classList.remove(\"invalid\");\n                roofError = false;\n                numErrors = Math.max(0, numErrors-1);\n            } else {\n                console.log(\"this is not a valid roof size\");\n                roofSizeBox.classList.add(\"invalid\");\n                roofError = true;\n                numErrors++;\n            }\n            if (roofSize.length == 0) {\n                roofSizeBox.classList.remove(\"invalid\");\n                roofError = false;\n                numErrors = Math.max(0, numErrors-1);\n            }\n\n            var usageBox = document.getElementById(\"elec-usage-input2\");\n            var usage = document.forms[\"battery\"][\"elec-usage\"].value;\n            var usageError = false;\n\n            // checking to see if user inputted a number for solar electricy usage is greater than the output of one panel (315w per hour = 0.315 Kw per hour => 0.315 * 5.5 = 1.73KW/Day = 52KW/month)\n            if (Number(usage) && Number(usage) >= 0) {\n                console.log(\"this is a valid usage amount\");\n                usageBox.classList.remove(\"invalid\");\n                usageError = false;\n                numErrors = Math.max(0, numErrors-1);\n            } else {\n                console.log(\"this is not a valid usage amount\");\n                usageBox.classList.add(\"invalid\");\n                usageError = true;\n                numErrors++;\n            }\n            if (usage.length == 0) {\n                usageBox.classList.remove(\"invalid\");\n                usageError = false;\n                numErrors = Math.max(0, numErrors-1);\n            }            \n\n            var storageBox = document.getElementById(\"storage-capacity-input\");\n            var storage = document.forms[\"battery\"][\"storage_capacity\"].value;\n            var storageError = false;\n\n            // checking to see if user inputted a number for battery capacity that is greater or equal to 0\n            if (Number(storage) && Number(storage) >= 0) {\n                console.log(\"this is a valid storage amount\");\n                storageBox.classList.remove(\"invalid\");\n                storageError = false;\n                numErrors = Math.max(0, numErrors-1);\n            } else {\n                console.log(\"this is not a valid usage amount\");\n                storageBox.classList.add(\"invalid\");\n                storageError = true;\n                numErrors++;\n            }\n            if (storage.length == 0) {\n                storageBox.classList.remove(\"invalid\");\n                storageError = false;\n                numErrors = Math.max(0, numErrors-1);\n            } \n\n            var dodBox = document.getElementById(\"dod-input\");\n            var dod = document.forms[\"battery\"][\"dod\"].value;\n            var dodError = false;\n            // checking to see if user inputted a number for dod that is greater or equal to 0\n            if (Number(dod) && Number(dod) >= 0 && Number(dod) <= 100) {\n                console.log(\"this is a valid storage amount\");\n                dodBox.classList.remove(\"invalid\");\n                dodError = false;\n                numErrors = Math.max(0, numErrors-1);\n            } else {\n                console.log(\"this is not a valid usage amount\");\n                dodBox.classList.add(\"invalid\");\n                dodError = true;\n                numErrors++;\n            }\n            if (dod.length == 0) {\n                dodBox.classList.remove(\"invalid\");\n                dodError = false;\n                numErrors = Math.max(0, numErrors-1);\n            } \n\n            var budgetBox = document.getElementById(\"budget2\");\n            var budget = document.forms[\"battery\"][\"budget\"].value;\n            var budgetError = false;\n\n            // checking to see if user inputted a number greater than the cost of one panel + fixed costs\n            if (Number(budget) && Number(budget) >= 0) {\n                console.log(\"this is a valid budget amount\");\n                budgetBox.classList.remove(\"invalid\");\n                budgetError = false;\n                numErrors = Math.max(0, numErrors-1);\n            } else {\n                console.log(\"this is not a valid budget amount\");\n                budgetBox.classList.add(\"invalid\");\n                budgetError = true;\n                numErrors++;\n            }\n            if (budget.length == 0) {\n                budgetBox.classList.remove(\"invalid\");\n                budgetError = false;\n                numErrors = Math.max(0, numErrors-1);\n            }  \n\n            if (postalError == true || roofError == true || usageError == true || budgetError == true || storageError == true || dodError == true) {\n                resultsButton.classList.add(\"disabled-button\");\n            } else {\n                resultsButton.classList.remove(\"disabled-button\");\n            }\n\n            var warning = document.getElementById(\"error-warning\");\n            // moving the warning icon down as the size of the div increases\n            if (numErrors == 3) {\n                warning.classList.remove(\"other-errors\");\n                warning.classList.add(\"three-errors\");\n                warning.classList.remove(\"four-errors\");\n                warning.classList.remove(\"five-errors\");\n                warning.classList.remove(\"six-errors\");\n            } else if (numErrors == 4) {\n                warning.classList.remove(\"other-errors\");\n                warning.classList.remove(\"three-errors\");\n                warning.classList.add(\"four-errors\");\n                warning.classList.remove(\"five-errors\");\n                warning.classList.remove(\"six-errors\");\n            } else if (numErrors == 5) {\n                warning.classList.remove(\"other-errors\");\n                warning.classList.remove(\"three-errors\");\n                warning.classList.remove(\"four-errors\");\n                warning.classList.add(\"five-errors\");\n                warning.classList.remove(\"six-errors\");\n            } else if (numErrors == 6) {\n                warning.classList.remove(\"other-errors\");\n                warning.classList.remove(\"three-errors\");\n                warning.classList.remove(\"four-errors\");\n                warning.classList.remove(\"five-errors\");\n                warning.classList.add(\"six-errors\");\n            } else {\n                warning.classList.add(\"other-errors\");\n                warning.classList.remove(\"three-errors\");\n                warning.classList.remove(\"four-errors\");\n                warning.classList.remove(\"five-errors\");\n                warning.classList.remove(\"six-errors\");\n            }\n        }\n\n        function finalCheckBatteryErrors() {\n            console.log(\"checking errors\");\n            var errorModal = document.getElementById(\"errorModal\");\n            var resultsButton = document.getElementById(\"results-button2\");\n            var postalCodeBox = document.getElementById(\"postal-code-input2\");\n            var roofSizeBox = document.getElementById(\"roof-size-input2\");\n            var usageBox = document.getElementById(\"elec-usage-input2\");\n            var storageBox = document.getElementById(\"storage-capacity-input\");\n            var dodBox = document.getElementById(\"dod-input\");\n            var budgetBox = document.getElementById(\"budget2\");\n            var errorText = document.getElementById(\"error-text\");\n            var update = document.getElementById(\"error-update\");\n\n            if (resultsButton.classList.contains(\"disabled-button\")) {\n                errorModal.style.display = \"block\";\n                // checking for postal code error\n                if (postalCodeBox.classList.contains(\"invalid\")) {\n                    errorText.innerHTML += \"Postal Code needs to be in the form of 'M3N'. <br><br>\"\n                }\n                // checking for roof size error\n                if (roofSizeBox.classList.contains(\"invalid\")) {\n                    errorText.innerHTML += \"Roof Size needs to be a number greater than 0 Sqft. <br><br>\"\n                }\n                // checking for usage error\n                if (usageBox.classList.contains(\"invalid\")) {\n                    errorText.innerHTML += \"Electricity Usage needs to be a number greater 0 kWh. <br><br>\"\n                }\n                // checking for battery capacity error\n                if (storageBox.classList.contains(\"invalid\")) {\n                    errorText.innerHTML += \"Storage Capacity of the battery must be a number greater than 0 kWh. <br><br>\"\n                }\n                // checking for dod error\n                if (dodBox.classList.contains(\"invalid\")) {\n                    errorText.innerHTML += \"Depth of Discharge of the battery must be a number between 0% and 100%. <br><br>\"\n                }\n                // checking for budget error\n                if (budgetBox.classList.contains(\"invalid\")) {\n                    errorText.innerHTML += \"Budget needs to be a number greated than $0.\"\n                }\n                update.onclick = function () {\n                    errorModal.style.display = \"none\";\n                    errorText.innerHTML = \"\";\n                }\n                window.onclick = function (event) {\n                    if (event.target == errorModal) {\n                        errorModal.style.display = \"none\";\n                        errorText.innerHTML = \"\";\n                    }\n                }\n            }\n        }\n        return (\n            <div class=\"Panel\">\n                <nav>\n                    <ul class=\"Tabs\">\n                        <li class=\"Tabs__tab active Tab\" id=\"tabs1\" onClick={() => { showTab(1, 2); }}><a href=\"javascript:;\">Solar</a></li>\n                        <li class=\"Tabs__tab Tab\" id=\"tabs2\" onClick={() => { showTab(2, 2); }}><a href=\"javascript:;\">Solar + Battery</a></li>\n                        <hr id=\"tab-underline\"></hr>\n                        <li class=\"Tabs__presentation-slider\" role=\"presentation\"></li>\n                    </ul>\n                </nav>\n\n\n                <p id=\"solar-subtext\"> I don’t own a home battery </p>\n                <p id=\"battery-subtext\"> I own a home battery </p>\n                <p id=\"form-desc\"> The information you provide will help determine the best solar system specifications for your home.</p>\n                <p id=\"form-desc2\"> In the case where you are not able to retrieve a field, we will use a default value for the analysis.</p>\n\n                {/* {/* Solar Form */}\n\n                <div class=\"Panel__body tabContent\" id=\"tabs-1\">\n\n                    <p class=\"formSectionTitles\" id=\"home-specs\" >Home Specs</p>\n                    <p class=\"formSectionTitles\" id=\"energy-usage\" >Energy Usage</p>\n                    <p class=\"formSectionTitles\" id=\"initial-inv1\" >Initial Investment</p>\n                    <p id=\"postal-text\">We only need the first 3 digits</p>\n                    <div class=\"help-tip\" id=\"q1\">\n                        <p><b>Tip:</b> estimate your roof size by dividing sqaure footage of your home by the number of storeys.</p>\n                    </div>\n                    <div class=\"help-tip\" id=\"q2\">\n                        <p>Select the month your electricity <br></br>bill is from.</p>\n                    </div>\n                    <div class=\"help-tip\" id=\"q3\">\n                        <p>Input the amount of your total monthly usage as displayed on your electrcity bill for the month.</p>\n                    </div>\n                    <div class=\"help-tip\" id=\"q6\">\n                        <p> \n                            <b> Tip:</b> The average cost of a residential solar installation is $15,000 - $20,000<sup id=\"budgetTipNote\">*</sup> for a monthly usage of 722 kWh. <br></br>\n                            <span id=\"budgetTipNote\"> <sup> * </sup> visit our <a href=\"/faq\">FAQs</a> to learn more about this estimate.</span>\n                        </p>\n                    </div>\n\n                    \n\n                    <form action=\"/solar-results\" name=\"solar\" method=\"POST\" class=\"userform\">\n                        <label>\n                            <p class=\"field-titles\" id=\"postal-code\" > Postal Code:  </p>\n                            <input class=\"field-inputs\" id=\"postal-code-input1\" type=\"text\" name=\"postal_code\" placeholder=\"M3N\" maxlength=\"3\" onBlur={() => { checkingSolarInputs(); }}/>\n                        </label>\n\n                        <label>\n                            <p class=\"field-titles\" id=\"roof-size\" > Roof Size (Sqft):  </p>\n                            <input class=\"field-inputs\" id=\"roof-size-input1\" type=\"text\" name=\"roof_size\" placeholder=\"2000\" onBlur={() => { checkingSolarInputs(); }}/>\n                        </label>\n\n                        <label>\n                            <p class=\"field-titles\" id=\"elec-usage\" > Electricity Usage (kWh):  </p>\n                            <input class=\"field-inputs\" id=\"elec-usage-input1\" type=\"text\" name=\"elec-usage\" placeholder=\"750\" onBlur={() => { checkingSolarInputs(); }}/>\n                        </label>\n\n\n\n                        <label>\n                            <p class=\"field-titles\" id=\"month-title\" > Month:</p>\n                            <select name=\"month\" id=\"month-input1\" class=\"dropdown-inputs\" required>\n                                <option value=\"\" disabled hidden selected>Select month</option>\n                                <option value=\"1\">January</option>\n                                <option value=\"2\">February</option>\n                                <option value=\"3\">March</option>\n                                <option value=\"4\">April</option>\n                                <option value=\"5\">May</option>\n                                <option value=\"6\">June</option>\n                                <option value=\"7\">July</option>\n                                <option value=\"8\">August</option>\n                                <option value=\"9\">September</option>\n                                <option value=\"10\">October</option>\n                                <option value=\"11\">November</option>\n                                <option value=\"12\">December</option>\n                            </select>\n                        </label>\n\n                        <label>\n                            <p class=\"field-titles\" id=\"heating-type-title\" > Type of Heating:</p>\n                            <select name=\"heating-type\" id=\"heating-input1\" class=\"dropdown-inputs\" required>\n                                <option value=\"\" disabled selected hidden>Select heating</option>\n                                <option value=\"1\">Electric</option>\n                                <option value=\"2\">Natural Gas</option>\n                            </select>\n                        </label>\n\n                        <label>\n                            <p class=\"field-titles\" id=\"budget1title\" > Budget (CAD):</p>\n                            <input class=\"field-inputs-budget\" id=\"budget1\" type=\"text\" name=\"budget\" placeholder=\"10000\" onBlur={() => { checkingSolarInputs(); }}/>\n                        </label>\n\n\n                        <div id=\"generate-box\" onMouseOver={() => { finalCheckSolarErrors(); }}>\n                            <input type=\"submit\" class=\"resultsButton\" id=\"results-button1\" value=\"Generate Results\" onMouseOver={() => { checkSolarValues(); }} />\n                        </div>\n                        <form>\n                            <div class=\"value-button\" id=\"decrease\" onClick={() => { decreaseValue(); }} value=\"Decrease Value\">-</div>\n                            <div class=\"value-button\" id=\"increase\" onClick={() => { increaseValue(); }} value=\"Increase Value\">+</div>\n                            <p id=\"dollar-sign1\">$</p>\n                        </form>\n                    </form>\n                </div>\n\n                {/* {/* Solar + Battery Form */}\n                <div class=\"Panel__body tabContent\" id=\"tabs-2\">\n\n                    <p class=\"formSectionTitles\" id=\"home-specs\" >Home Specs</p>\n                    <p class=\"formSectionTitles\" id=\"energy-usage\" >Energy Usage</p>\n                    <p class=\"formSectionTitles\" id=\"initial-inv2\" >Initial Investment</p>\n                    <p class=\"formSectionTitles\" id=\"battery-specs\" >Battery Specs</p>\n                    <p id=\"postal-text\">We only need the first 3 digits</p>\n\n                    <div class=\"help-tip\" id=\"q1\">\n                        <p><b>Tip:</b> estimate your roof size by dividing sqaure footage of your home by the number of storeys.</p>\n                    </div>\n                    <div class=\"help-tip\" id=\"q2\">\n                        <p>Select the month your electricity <br></br>bill is from.</p>\n                    </div>\n                    <div class=\"help-tip\" id=\"q3\">\n                        <p>Input the amount of your total monthly usage as displayed on your electrcity bill for the month.</p>\n                    </div>\n                    <div class=\"help-tip\" id=\"q4\">\n                        <p>What is the nameplate storage capacity of your home battery?</p>\n                    </div>\n                    <div class=\"help-tip\" id=\"q5\">\n                        <p>The DoD should be listed under your battery specifications.</p>\n                    </div>\n                    <div class=\"help-tip\" id=\"q7\">\n                        <p> \n                        <b> Tip:</b> The average cost of a residential solar installation is $15,000 - $20,000<sup id=\"budgetTipNote\">*</sup> for a monthly usage of 722 kWh. <br></br>\n                            <span id=\"budgetTipNote\"> <sup> * </sup> visit our <a href=\"/faq\">FAQs</a> to learn more about this estimate.</span>\n                        </p>\n                    </div>\n\n                    <form action=\"/solarbattery-results\" method=\"POST\" name=\"battery\" class=\"userform\">\n                        <label>\n                            <p class=\"field-titles\" id=\"postal-code\" > Postal Code:  </p>\n                            <input class=\"field-inputs\" id=\"postal-code-input2\" type=\"text\" name=\"postal_code\" placeholder=\"M3N\" maxlength=\"3\" onBlur={() => { checkingBatteryInputs(); }}/>\n                        </label>\n\n                        <label>\n                            <p class=\"field-titles\" id=\"roof-size\" > Roof Size (Sqft):  </p>\n                            <input class=\"field-inputs\" id=\"roof-size-input2\" type=\"text\" name=\"roof_size\" placeholder=\"2000\" onBlur={() => { checkingBatteryInputs(); }}/>\n                        </label>\n\n                        <label>\n                            <p class=\"field-titles\" id=\"elec-usage\" > Electricity Usage (kWh):  </p>\n                            <input class=\"field-inputs\" id=\"elec-usage-input2\" type=\"text\" name=\"elec-usage\" placeholder=\"750\" onBlur={() => { checkingBatteryInputs(); }}/>\n                        </label>\n\n\n                        <label>\n                            <p class=\"field-titles\" id=\"month-title\" > Month:</p>\n                            <select name=\"month\" id=\"month-input2\" class=\"dropdown-inputs\" required>\n                                <option value=\"\" disabled hidden selected>Select month</option>\n                                <option value=\"1\">January</option>\n                                <option value=\"2\">February</option>\n                                <option value=\"3\">March</option>\n                                <option value=\"4\">April</option>\n                                <option value=\"5\">May</option>\n                                <option value=\"6\">June</option>\n                                <option value=\"7\">July</option>\n                                <option value=\"8\">August</option>\n                                <option value=\"9\">September</option>\n                                <option value=\"10\">October</option>\n                                <option value=\"11\">November</option>\n                                <option value=\"12\">December</option>\n                            </select>\n                        </label>\n\n\n                        <label>\n                            <p class=\"field-titles\" id=\"heating-type-title\" > Type of Heating:</p>\n                            <select name=\"heating-type\" id=\"heating-input2\" class=\"dropdown-inputs\" required>\n                                <option value=\"\" disabled selected hidden>Select heating</option>\n                                <option value=\"1\">Electric</option>\n                                <option value=\"2\">Natural Gas</option>\n                            </select>\n                        </label>\n\n                        <label>\n                            <p class=\"field-titles\" id=\"storage-capacity\" > Storage Capacity (kWh):</p>\n                            <input class=\"field-inputs\" id=\"storage-capacity-input\" type=\"text\" name=\"storage_capacity\" placeholder=\"13\" onBlur={() => { checkingBatteryInputs(); }}/>\n                        </label>\n\n                        <label>\n                            <p class=\"field-titles\" id=\"dod\" > Depth of Discharge:</p>\n                            <input class=\"field-input-dod\" id=\"dod-input\" type=\"text\" name=\"dod\" placeholder=\"80\" maxlength=\"3\" onBlur={() => { checkingBatteryInputs(); }}/>\n                        </label>\n\n                        <label>\n                            <p class=\"field-titles\" id=\"budget2title\" > Budget (CAD):</p>\n                            <input class=\"field-inputs-budget\" id=\"budget2\" type=\"text\" name=\"budget\" placeholder=\"10000\" onBlur={() => { checkingBatteryInputs(); }}/>\n                        </label>\n\n                        <div id=\"generate-box2\" onMouseOver={() => { finalCheckBatteryErrors(); }}>\n                            <input type=\"submit\" class=\"resultsButton\" id=\"results-button2\" value=\"Generate Results\" onMouseOver={() => { checkBatteryValues(); }} />\n                        </div>\n                        <div class=\"whitesquare\"></div>\n\n                        <form>\n                            <div class=\"value-button\" id=\"decrease2\" onClick={() => { decreaseValue2(); }} value=\"Decrease Value\">-</div>\n                            <div class=\"value-button\" id=\"increase2\" onClick={() => { increaseValue2(); }} value=\"Increase Value\">+</div>\n                            <p id=\"percentage\">%</p>\n                            <p id=\"dollar-sign2\">$</p>\n\n                        </form>\n                    </form>\n                </div>\n\n                <div class=\"footer-ss\">\n                    <Footer />\n                </div> \n\n                <p id=\"footerspace\"> buffer space </p>\n                \n                <div id=\"solarModal\" class=\"modal\">\n                    <div class=\"modal-content\">\n                        <div id=\"modal-top-border\"></div>\n                        <img src={warning} id=\"warning\" alt=\"warning\"></img>\n                        <p id=\"modal-title\"> Incomplete fields </p>\n                        <p id=\"modal-text\"> You have left one or more fields blank. For best results, please update all fields with your information. Click continue if you are comfortable with the default value(s) being used.</p>\n                        <div id=\"buttondiv\"></div>\n                        <form action=\"/solar-results\" method=\"POST\">\n                            <button id=\"continue\"> Continue</button>\n                        </form>\n                        <button class=\"modalSubmit\" id=\"solar-update\"> Update fields </button>\n                    </div>\n                </div>\n                <div id=\"batteryModal\" class=\"modal\">\n                    <div class=\"modal-content\">\n                        <div id=\"modal-top-border\"></div>\n                        <img src={warning} id=\"warning\" alt=\"warning\"></img>\n                        <p id=\"modal-title\"> Incomplete Fields </p>\n                        <p id=\"modal-text\"> You have left one or more fields blank. For best results, please update all fields with your information. Click continue if you are comfortable with the default value(s) being used.</p>\n                        <div id=\"buttondiv\"></div>\n                        <form action=\"/solarbattery-results\" method=\"POST\">\n                            <button id=\"continue\"> Continue</button>\n                        </form>\n                        <button class=\"modalSubmit\" id=\"battery-update\"> Update fields </button>\n                    </div>\n                </div>\n                <div id=\"errorModal\" class=\"modal\">\n                    <div class=\"error-content\">\n                        <div id=\"modal-top-border\"></div>\n                        <p id=\"error-title\"> Invalid Input(s)</p>\n                        <div class=\"error-container\">\n                            <div id=\"left\">\n                                <img src={warning} class=\"other-errors\" id=\"error-warning\" alt=\"warning\"></img>\n                            </div>\n                            <div id=\"right\">\n                                <p id=\"error-text\"></p>\n                            </div>\n                            <div id=\"error-buttondiv\">\n                                <button class=\"modalSubmit\" id=\"error-update\"> Update fields </button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                \n\n            </div>\n        )\n    }\n}\n\nexport default startSaving","/Users/tonili/Desktop/fydp-app/src/components/mainHomepage.js",[],"/Users/tonili/Desktop/fydp-app/src/components/SolarFAQ.js",[],"/Users/tonili/Desktop/fydp-app/src/components/About.js",[],"/Users/tonili/Desktop/fydp-app/src/components/scrollTo.js",[],"/Users/tonili/Desktop/fydp-app/src/components/Navbar.js",["110","111","112","113"],"import React, { Component } from 'react';\nimport logo from '../logo.png';\n\nclass Navbar extends Component {\n    render() {\n\n        window.onload = function() {\n            var currentUrl = window.location.pathname;\n            var home = \"/\";\n            var form = \"/start-saving\";\n            var faq = \"/faq\";\n            var about = \"/about\";\n            var homeID = document.getElementById(\"home\");\n            var formID = document.getElementById(\"form\");\n            var faqID = document.getElementById(\"faq\");\n            var aboutID = document.getElementById(\"about\");\n\n            console.log(currentUrl);\n            if (currentUrl.localeCompare(form) == 0) {\n                console.log(\"form\");\n                homeID.classList.remove(\"selected\");\n                formID.classList.add(\"selected\");\n                faqID.classList.remove(\"selected\");\n                aboutID.classList.remove(\"selected\");\n            } else if (currentUrl.localeCompare(faq) == 0) {\n                console.log(\"faq\");\n                homeID.classList.remove(\"selected\");\n                formID.classList.remove(\"selected\");\n                faqID.classList.add(\"selected\");\n                aboutID.classList.remove(\"selected\");\n            } else if (currentUrl.localeCompare(about) == 0) {\n                console.log(\"about\");\n                homeID.classList.remove(\"selected\");\n                formID.classList.remove(\"selected\");\n                faqID.classList.remove(\"selected\");\n                aboutID.classList.add(\"selected\");\n            } else {\n                console.log(\"home\");\n                homeID.classList.add(\"selected\");\n                formID.classList.remove(\"selected\");\n                faqID.classList.remove(\"selected\");\n                aboutID.classList.remove(\"selected\");\n            }\n        }\n\n        return (\n            <div class=\"sticky\">\n                <div class=\"navs\">\n                    <a href=\"/\"> <img src={logo} id=\"logo\" alt=\"logo\"></img> </a>\n                    <ul class=\"nav-right\">\n                        <li><a href=\"/\" id=\"home\">Home</a></li>\n                        <li><a href=\"/start-saving\" id=\"form\">Start Saving</a></li>\n                        <li><a href=\"/faq\" id=\"faq\">Solar FAQ</a></li>\n                        <li><a href=\"/about\" id=\"about\">About Us</a></li>   \n                    </ul>\n                </div>\n            </div>\n        );\n    }\n}\n\n\nexport default Navbar","/Users/tonili/Desktop/fydp-app/src/components/Footer.js",["114","115"],"import React, { Component } from 'react';\n\nclass Footer extends Component {\n\n    \n    render() {\n        return (\n            <div class=\"footer\">\n                <p class=\"footer-left\">\n                    <a>SoliⒸ2021</a> &nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;\n                    <a>Management Engineering Capstone Design Project</a>\n                </p>\n            </div>\n\n        );\n\n    }\n}\n    \nexport default Footer",{"ruleId":"116","replacedBy":"117"},{"ruleId":"118","replacedBy":"119"},{"ruleId":"120","severity":1,"message":"121","line":1,"column":17,"nodeType":"122","messageId":"123","endLine":1,"endColumn":25},{"ruleId":"120","severity":1,"message":"124","line":1,"column":27,"nodeType":"122","messageId":"123","endLine":1,"endColumn":36},{"ruleId":"120","severity":1,"message":"125","line":2,"column":8,"nodeType":"122","messageId":"123","endLine":2,"endColumn":15},{"ruleId":"126","severity":1,"message":"127","line":32,"column":27,"nodeType":"128","messageId":"129","endLine":32,"endColumn":29},{"ruleId":"120","severity":1,"message":"130","line":97,"column":17,"nodeType":"122","messageId":"123","endLine":97,"endColumn":20},{"ruleId":"126","severity":1,"message":"127","line":106,"column":28,"nodeType":"128","messageId":"129","endLine":106,"endColumn":30},{"ruleId":"126","severity":1,"message":"127","line":106,"column":46,"nodeType":"128","messageId":"129","endLine":106,"endColumn":48},{"ruleId":"126","severity":1,"message":"127","line":106,"column":65,"nodeType":"128","messageId":"129","endLine":106,"endColumn":67},{"ruleId":"126","severity":1,"message":"127","line":106,"column":80,"nodeType":"128","messageId":"129","endLine":106,"endColumn":82},{"ruleId":"126","severity":1,"message":"127","line":106,"column":97,"nodeType":"128","messageId":"129","endLine":106,"endColumn":99},{"ruleId":"126","severity":1,"message":"127","line":106,"column":113,"nodeType":"128","messageId":"129","endLine":106,"endColumn":115},{"ruleId":"126","severity":1,"message":"127","line":112,"column":38,"nodeType":"128","messageId":"129","endLine":112,"endColumn":40},{"ruleId":"126","severity":1,"message":"127","line":138,"column":35,"nodeType":"128","messageId":"129","endLine":138,"endColumn":37},{"ruleId":"126","severity":1,"message":"127","line":138,"column":62,"nodeType":"128","messageId":"129","endLine":138,"endColumn":64},{"ruleId":"126","severity":1,"message":"127","line":138,"column":92,"nodeType":"128","messageId":"129","endLine":138,"endColumn":94},{"ruleId":"126","severity":1,"message":"127","line":138,"column":122,"nodeType":"128","messageId":"129","endLine":138,"endColumn":124},{"ruleId":"126","severity":1,"message":"127","line":149,"column":35,"nodeType":"128","messageId":"129","endLine":149,"endColumn":37},{"ruleId":"126","severity":1,"message":"127","line":171,"column":33,"nodeType":"128","messageId":"129","endLine":171,"endColumn":35},{"ruleId":"126","severity":1,"message":"127","line":193,"column":30,"nodeType":"128","messageId":"129","endLine":193,"endColumn":32},{"ruleId":"126","severity":1,"message":"127","line":215,"column":31,"nodeType":"128","messageId":"129","endLine":215,"endColumn":33},{"ruleId":"126","severity":1,"message":"127","line":221,"column":29,"nodeType":"128","messageId":"129","endLine":221,"endColumn":31},{"ruleId":"126","severity":1,"message":"127","line":221,"column":50,"nodeType":"128","messageId":"129","endLine":221,"endColumn":52},{"ruleId":"126","severity":1,"message":"127","line":221,"column":72,"nodeType":"128","messageId":"129","endLine":221,"endColumn":74},{"ruleId":"126","severity":1,"message":"127","line":221,"column":95,"nodeType":"128","messageId":"129","endLine":221,"endColumn":97},{"ruleId":"126","severity":1,"message":"127","line":229,"column":27,"nodeType":"128","messageId":"129","endLine":229,"endColumn":29},{"ruleId":"126","severity":1,"message":"127","line":233,"column":34,"nodeType":"128","messageId":"129","endLine":233,"endColumn":36},{"ruleId":"126","severity":1,"message":"127","line":278,"column":38,"nodeType":"128","messageId":"129","endLine":278,"endColumn":40},{"ruleId":"126","severity":1,"message":"127","line":300,"column":28,"nodeType":"128","messageId":"129","endLine":300,"endColumn":30},{"ruleId":"126","severity":1,"message":"127","line":300,"column":46,"nodeType":"128","messageId":"129","endLine":300,"endColumn":48},{"ruleId":"126","severity":1,"message":"127","line":300,"column":65,"nodeType":"128","messageId":"129","endLine":300,"endColumn":67},{"ruleId":"126","severity":1,"message":"127","line":300,"column":80,"nodeType":"128","messageId":"129","endLine":300,"endColumn":82},{"ruleId":"126","severity":1,"message":"127","line":300,"column":97,"nodeType":"128","messageId":"129","endLine":300,"endColumn":99},{"ruleId":"126","severity":1,"message":"127","line":300,"column":117,"nodeType":"128","messageId":"129","endLine":300,"endColumn":119},{"ruleId":"126","severity":1,"message":"127","line":300,"column":130,"nodeType":"128","messageId":"129","endLine":300,"endColumn":132},{"ruleId":"126","severity":1,"message":"127","line":300,"column":146,"nodeType":"128","messageId":"129","endLine":300,"endColumn":148},{"ruleId":"126","severity":1,"message":"127","line":306,"column":38,"nodeType":"128","messageId":"129","endLine":306,"endColumn":40},{"ruleId":"126","severity":1,"message":"127","line":327,"column":35,"nodeType":"128","messageId":"129","endLine":327,"endColumn":37},{"ruleId":"126","severity":1,"message":"127","line":327,"column":62,"nodeType":"128","messageId":"129","endLine":327,"endColumn":64},{"ruleId":"126","severity":1,"message":"127","line":327,"column":92,"nodeType":"128","messageId":"129","endLine":327,"endColumn":94},{"ruleId":"126","severity":1,"message":"127","line":327,"column":122,"nodeType":"128","messageId":"129","endLine":327,"endColumn":124},{"ruleId":"126","severity":1,"message":"127","line":338,"column":35,"nodeType":"128","messageId":"129","endLine":338,"endColumn":37},{"ruleId":"126","severity":1,"message":"127","line":360,"column":33,"nodeType":"128","messageId":"129","endLine":360,"endColumn":35},{"ruleId":"126","severity":1,"message":"127","line":382,"column":30,"nodeType":"128","messageId":"129","endLine":382,"endColumn":32},{"ruleId":"126","severity":1,"message":"127","line":404,"column":32,"nodeType":"128","messageId":"129","endLine":404,"endColumn":34},{"ruleId":"126","severity":1,"message":"127","line":425,"column":28,"nodeType":"128","messageId":"129","endLine":425,"endColumn":30},{"ruleId":"126","severity":1,"message":"127","line":447,"column":31,"nodeType":"128","messageId":"129","endLine":447,"endColumn":33},{"ruleId":"126","severity":1,"message":"127","line":453,"column":29,"nodeType":"128","messageId":"129","endLine":453,"endColumn":31},{"ruleId":"126","severity":1,"message":"127","line":453,"column":50,"nodeType":"128","messageId":"129","endLine":453,"endColumn":52},{"ruleId":"126","severity":1,"message":"127","line":453,"column":72,"nodeType":"128","messageId":"129","endLine":453,"endColumn":74},{"ruleId":"126","severity":1,"message":"127","line":453,"column":95,"nodeType":"128","messageId":"129","endLine":453,"endColumn":97},{"ruleId":"126","severity":1,"message":"127","line":453,"column":119,"nodeType":"128","messageId":"129","endLine":453,"endColumn":121},{"ruleId":"126","severity":1,"message":"127","line":453,"column":139,"nodeType":"128","messageId":"129","endLine":453,"endColumn":141},{"ruleId":"126","severity":1,"message":"127","line":461,"column":27,"nodeType":"128","messageId":"129","endLine":461,"endColumn":29},{"ruleId":"126","severity":1,"message":"127","line":467,"column":34,"nodeType":"128","messageId":"129","endLine":467,"endColumn":36},{"ruleId":"126","severity":1,"message":"127","line":473,"column":34,"nodeType":"128","messageId":"129","endLine":473,"endColumn":36},{"ruleId":"126","severity":1,"message":"127","line":479,"column":34,"nodeType":"128","messageId":"129","endLine":479,"endColumn":36},{"ruleId":"126","severity":1,"message":"127","line":538,"column":38,"nodeType":"128","messageId":"129","endLine":538,"endColumn":40},{"ruleId":"131","severity":1,"message":"132","line":549,"column":104,"nodeType":"133","endLine":549,"endColumn":127},{"ruleId":"134","severity":1,"message":"135","line":549,"column":112,"nodeType":"136","messageId":"137","endLine":549,"endColumn":126},{"ruleId":"131","severity":1,"message":"132","line":550,"column":97,"nodeType":"133","endLine":550,"endColumn":120},{"ruleId":"134","severity":1,"message":"135","line":550,"column":105,"nodeType":"136","messageId":"137","endLine":550,"endColumn":119},{"ruleId":"120","severity":1,"message":"138","line":9,"column":17,"nodeType":"122","messageId":"123","endLine":9,"endColumn":21},{"ruleId":"126","severity":1,"message":"127","line":19,"column":48,"nodeType":"128","messageId":"129","endLine":19,"endColumn":50},{"ruleId":"126","severity":1,"message":"127","line":25,"column":54,"nodeType":"128","messageId":"129","endLine":25,"endColumn":56},{"ruleId":"126","severity":1,"message":"127","line":31,"column":56,"nodeType":"128","messageId":"129","endLine":31,"endColumn":58},{"ruleId":"131","severity":1,"message":"139","line":10,"column":21,"nodeType":"133","endLine":10,"endColumn":24},{"ruleId":"131","severity":1,"message":"139","line":11,"column":21,"nodeType":"133","endLine":11,"endColumn":24},"no-native-reassign",["140"],"no-negated-in-lhs",["141"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'graphic' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'nav' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-script-url","Script URL is a form of eval.","Literal","unexpectedScriptURL","'home' is assigned a value but never used.","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation"]