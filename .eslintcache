[{"/Users/Ghazal/Desktop/fydp-app/src/index.js":"1","/Users/Ghazal/Desktop/fydp-app/src/App.js":"2","/Users/Ghazal/Desktop/fydp-app/src/reportWebVitals.js":"3","/Users/Ghazal/Desktop/fydp-app/src/components/scrollTo.js":"4","/Users/Ghazal/Desktop/fydp-app/src/components/Navbar.js":"5","/Users/Ghazal/Desktop/fydp-app/src/components/SolarFAQ.js":"6","/Users/Ghazal/Desktop/fydp-app/src/components/About.js":"7","/Users/Ghazal/Desktop/fydp-app/src/components/mainHomepage.js":"8","/Users/Ghazal/Desktop/fydp-app/src/components/startSaving.js":"9","/Users/Ghazal/Desktop/fydp-app/src/components/Footer.js":"10","/Users/Ghazal/Desktop/fydp-app/src/components/Accordion.js":"11","/Users/Ghazal/Desktop/fydp-app/src/components/faqData.js":"12"},{"size":500,"mtime":1611078404286,"results":"13","hashOfConfig":"14"},{"size":1101,"mtime":1614100632861,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":1611078404294,"results":"16","hashOfConfig":"14"},{"size":264,"mtime":1613664890365,"results":"17","hashOfConfig":"14"},{"size":2443,"mtime":1613664890359,"results":"18","hashOfConfig":"14"},{"size":621,"mtime":1614102083121,"results":"19","hashOfConfig":"14"},{"size":407,"mtime":1613664890357,"results":"20","hashOfConfig":"14"},{"size":2953,"mtime":1614097580062,"results":"21","hashOfConfig":"14"},{"size":40038,"mtime":1614097580063,"results":"22","hashOfConfig":"14"},{"size":419,"mtime":1613664890358,"results":"23","hashOfConfig":"14"},{"size":647,"mtime":1614101491393,"results":"24","hashOfConfig":"14"},{"size":226,"mtime":1614100803517,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"12pziaj",{"filePath":"28","messages":"29","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":59,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/Ghazal/Desktop/fydp-app/src/index.js",[],"/Users/Ghazal/Desktop/fydp-app/src/App.js",["52","53"],"/Users/Ghazal/Desktop/fydp-app/src/reportWebVitals.js",[],"/Users/Ghazal/Desktop/fydp-app/src/components/scrollTo.js",[],"/Users/Ghazal/Desktop/fydp-app/src/components/Navbar.js",["54","55","56","57"],"/Users/Ghazal/Desktop/fydp-app/src/components/SolarFAQ.js",[],"/Users/Ghazal/Desktop/fydp-app/src/components/About.js",[],"/Users/Ghazal/Desktop/fydp-app/src/components/mainHomepage.js",[],"/Users/Ghazal/Desktop/fydp-app/src/components/startSaving.js",["58","59","60","61","62","63","64","65","66","67","68","69","70","71","72","73","74","75","76","77","78","79","80","81","82","83","84","85","86","87","88","89","90","91","92","93","94","95","96","97","98","99","100","101","102","103","104","105","106","107","108","109","110","111","112","113","114","115","116"],"import React, { Component } from 'react'\nimport graphic from '../question_img.png'\nimport warning from '../warning.png'\n\nclass startSaving extends Component {\n    render() {\n        window.onbeforeunload = function() {\n            var defaultForm = \"solar\";\n            localStorage.setItem(\"whichForm\", defaultForm);\n            var solarTab = document.getElementById(\"tabs1\");\n            var batteryTab = document.getElementById(\"tabs2\");\n\n            solarTab.classList.add(\"active\");\n            batteryTab.classList.remove(\"active\");\n            document.getElementById('tabs-2').style.display = 'none';\n            document.getElementById('tabs2').style.fontWeight = 400;\n            document.getElementById('tabs-1').style.display = 'block';\n            document.getElementById('tabs1').style.fontWeight = 600;\n        }\n\n        // switching between tabs\n        var tabs = document.getElementsByClassName('Tab');\n        window.addEventListener('load', function () {\n            // switching tab if returning from battery results page\n            var whichForm = localStorage.getItem(\"whichForm\")\n            var solarTab = document.getElementById(\"tabs1\");\n            var batteryTab = document.getElementById(\"tabs2\");\n            window.scrollTo(0, 0);\n\n            console.log(whichForm);\n            if (whichForm == \"battery\") {\n                solarTab.classList.remove(\"active\");\n                batteryTab.classList.add(\"active\");\n                document.getElementById('tabs-1').style.display = 'none';\n                document.getElementById('tabs1').style.fontWeight = 400;\n                document.getElementById('tabs-2').style.display = 'block';\n                document.getElementById('tabs2').style.fontWeight = 600;\n            }\n\n            Array.prototype.forEach.call(tabs, function (tab) {\n                tab.addEventListener('click', setActiveClass);\n            });\n        });\n        function setActiveClass(evt) {\n            Array.prototype.forEach.call(tabs, function (tab) {\n                tab.classList.remove('active');\n            });\n\n            evt.currentTarget.classList.add('active');\n        }\n        function showTab(selected, total) {\n            var i;\n            for (i = 1; i <= total; i += 1) {\n                document.getElementById('tabs-' + i).style.display = 'none';\n                document.getElementById('tabs' + i).style.fontWeight = 400;\n            }\n            document.getElementById('tabs-' + selected).style.display = 'block';\n            document.getElementById('tabs' + selected).style.fontWeight = 600;\n        }\n\n        // buttons for increasing and decreasing budget input on Solar form\n        function increaseValue() {\n            var value = parseInt(document.getElementById('budget1').value, 10);\n            value = isNaN(value) ? 0 : value;\n            value = value + 500;\n            document.getElementById('budget1').value = value;\n        }\n        function decreaseValue() {\n            var value = parseInt(document.getElementById('budget1').value, 10);\n            value = isNaN(value) ? 0 : value;\n            if (value >= 500) {\n                value = value - 500;\n            }\n            document.getElementById('budget1').value = value;\n        }\n        // buttons for increasing and decreasing budget input on Solar+Battery form\n        function increaseValue2() {\n            var value = parseInt(document.getElementById('budget2').value, 10);\n            value = isNaN(value) ? 0 : value;\n            value = value + 500;\n            document.getElementById('budget2').value = value;\n        }\n        function decreaseValue2() {\n            var value = parseInt(document.getElementById('budget2').value, 10);\n            value = isNaN(value) ? 0 : value;\n            if (value >= 500) {\n                value = value - 500;\n            }\n            document.getElementById('budget2').value = value;\n        }\n\n        // check values for Solar form and alert user of default values being used\n        function checkSolarValues() {\n            var modal = document.getElementById(\"solarModal\");\n            var update = document.getElementById(\"solar-update\");\n            var nav = document.getElementById(\"navigation\"); \n\n            var postalCode = document.forms[\"solar\"][\"postal_code\"].value;\n            var roofSize = document.forms[\"solar\"][\"roof_size\"].value;\n            var elecUsage = document.forms[\"solar\"][\"elec-usage\"].value;\n            var month = document.forms[\"solar\"][\"month\"].value;\n            var heating = document.forms[\"solar\"][\"heating-type\"].value;\n            var budget = document.forms[\"solar\"][\"budget\"].value;\n\n            if (postalCode == \"\" || roofSize == \"\" || elecUsage == \"\" || month == \"\" || heating == \"\" || budget == \"\") {\n                modal.style.display = \"block\";\n                update.onclick = function () {\n                    modal.style.display = \"none\";\n                }\n                window.onclick = function (event) {\n                    if (event.target == modal) {\n                        modal.style.display = \"none\";\n                    }\n                }\n            }\n        }\n        function isLetter(char) {\n            return (/[a-zA-Z]/).test(char);\n        }\n        function isNumber(char) {\n            return (/[0-9]/).test(char);\n        }\n        function checkingSolarInputs() {\n            var postalCodeBox = document.getElementById(\"postal-code-input1\");\n            var resultsButton = document.getElementById(\"results-button1\");\n            var postalCode = document.forms[\"solar\"][\"postal_code\"].value;\n            var postalError = false;\n            var numErrors = 0;\n\n            var split = [];\n            var i;\n            for (i=0; i<postalCode.length; i++) {\n                split[i] = postalCode.charAt([i]);\n            }\n\n            // checking if user input is a valid postal code\n            if (postalCode.length == 3 && isLetter(split[0]) == true && isNumber(split[1]) == true && isLetter(split[2]) == true) {\n                console.log(\"this is a valid postal code\");\n                postalCodeBox.classList.remove(\"invalid\");\n                postalError = false;\n                numErrors = Math.max(0, numErrors-1);\n            } else {\n                console.log(\"this is NOT a valid postal code\");\n                postalCodeBox.classList.add(\"invalid\");\n                postalError = true;\n                numErrors++;\n            }\n            if (postalCode.length == 0) {\n                postalCodeBox.classList.remove(\"invalid\");\n                postalError = false;\n                numErrors = Math.max(0, numErrors-1);\n            }\n\n            var roofSizeBox = document.getElementById(\"roof-size-input1\");\n            var roofSize = document.forms[\"solar\"][\"roof_size\"].value;\n            var roofError = false;\n\n            // checking to see if user inputted a number for solar roof size\n            if (Number(roofSize) && Number(roofSize) > 0) {\n                console.log(\"this is a valid roof size\");\n                roofSizeBox.classList.remove(\"invalid\");\n                roofError = false;\n                numErrors = Math.max(0, numErrors-1);\n            } else {\n                console.log(\"this is not a valid roof size\");\n                roofSizeBox.classList.add(\"invalid\");\n                roofError = true;\n                numErrors++;\n            }\n            if (roofSize.length == 0) {\n                roofSizeBox.classList.remove(\"invalid\");\n                roofError = false;\n                numErrors = Math.max(0, numErrors-1);\n            }\n\n            var usageBox = document.getElementById(\"elec-usage-input1\");\n            var usage = document.forms[\"solar\"][\"elec-usage\"].value;\n            var usageError = false;\n\n            // checking to see if user inputted a number for solar electricy usage\n            if (Number(usage) && Number(usage) >= 0) {\n                console.log(\"this is a valid usage amount\");\n                usageBox.classList.remove(\"invalid\");\n                usageError = false;\n                numErrors = Math.max(0, numErrors-1);\n            } else {\n                console.log(\"this is not a valid usage amount\");\n                usageBox.classList.add(\"invalid\");\n                usageError = true;\n                numErrors++;\n            }\n            if (usage.length == 0) {\n                usageBox.classList.remove(\"invalid\");\n                usageError = false;\n                numErrors = Math.max(0, numErrors-1);\n            }            \n\n            var budgetBox = document.getElementById(\"budget1\");\n            var budget = document.forms[\"solar\"][\"budget\"].value;\n            var budgetError = false;\n\n            // checking to see if user inputted a number greater than the cost of one panel + fixed costs\n            if (Number(budget) && Number(budget) >= 0) {\n                console.log(\"this is a valid budget amount\");\n                budgetBox.classList.remove(\"invalid\");\n                budgetError = false;\n                numErrors = Math.max(0, numErrors-1);\n            } else {\n                console.log(\"this is not a valid budget amount\");\n                budgetBox.classList.add(\"invalid\");\n                budgetError = true;\n                numErrors++;\n            }\n            if (budget.length == 0) {\n                budgetBox.classList.remove(\"invalid\");\n                budgetError = false;\n                numErrors = Math.max(0, numErrors-1);\n            }  \n\n            if (postalError == true || roofError == true || usageError == true || budgetError == true) {\n                resultsButton.classList.add(\"disabled-button\");\n            } else {\n                resultsButton.classList.remove(\"disabled-button\");\n            }\n\n            var warning = document.getElementById(\"error-warning\");\n            // moving the warning icon down as the size of the div increases\n            if (numErrors == 3) {\n                warning.classList.remove(\"other-errors\");\n                warning.classList.add(\"three-errors\");\n                warning.classList.remove(\"four-errors\");\n            } else if (numErrors == 4) {\n                warning.classList.remove(\"other-errors\");\n                warning.classList.remove(\"three-errors\");\n                warning.classList.add(\"four-errors\");\n            } else {\n                warning.classList.add(\"other-errors\");\n                warning.classList.remove(\"three-errors\");\n                warning.classList.remove(\"four-errors\");\n            }\n        }\n\n        function finalCheckSolarErrors() {\n            console.log(\"checking errors\");\n            var errorModal = document.getElementById(\"errorModal\");\n            var resultsButton = document.getElementById(\"results-button1\");\n            var postalCodeBox = document.getElementById(\"postal-code-input1\");\n            var roofSizeBox = document.getElementById(\"roof-size-input1\");\n            var usageBox = document.getElementById(\"elec-usage-input1\");\n            var budgetBox = document.getElementById(\"budget1\");\n            var errorText = document.getElementById(\"error-text\");\n            var update = document.getElementById(\"error-update\");\n\n            if (resultsButton.classList.contains(\"disabled-button\")) {\n                errorModal.style.display = \"block\";\n                // checking for postal code error\n                if (postalCodeBox.classList.contains(\"invalid\")) {\n                    errorText.innerHTML += \"Postal Code needs to be in the form of 'M3N'. <br><br>\"\n                }\n                // checking for roof size error\n                if (roofSizeBox.classList.contains(\"invalid\")) {\n                    errorText.innerHTML += \"Roof Size needs to be a number greater than 0 Sqft. <br><br>\"\n                }\n                // checking for usage error\n                if (usageBox.classList.contains(\"invalid\")) {\n                    errorText.innerHTML += \"Electricity Usage needs to be a number greater than 0 kWh. <br><br>\"\n                }\n                // checking for budget error\n                if (budgetBox.classList.contains(\"invalid\")) {\n                    errorText.innerHTML += \"Budget needs to be a number greater than $0.\"\n                }\n                update.onclick = function () {\n                    errorModal.style.display = \"none\";\n                    errorText.innerHTML = \"\";\n                }\n                window.onclick = function (event) {\n                    if (event.target == errorModal) {\n                        errorModal.style.display = \"none\";\n                        errorText.innerHTML = \"\";\n                    }\n                }\n            }\n        }\n        // check values for Battery form and alert user of default values being used\n        function checkBatteryValues() {\n            var modal = document.getElementById(\"batteryModal\");\n            var update = document.getElementById(\"battery-update\");\n\n            var postalCode = document.forms[\"battery\"][\"postal_code\"].value;\n            var roofSize = document.forms[\"battery\"][\"roof_size\"].value;\n            var elecUsage = document.forms[\"battery\"][\"elec-usage\"].value;\n            var month = document.forms[\"battery\"][\"month\"].value;\n            var heating = document.forms[\"battery\"][\"heating-type\"].value;\n            var batteryCap = document.forms[\"battery\"][\"storage_capacity\"].value;\n            var dod = document.forms[\"battery\"][\"dod\"].value;\n            var budget = document.forms[\"battery\"][\"budget\"].value;\n\n\n            if (postalCode == \"\" || roofSize == \"\" || elecUsage == \"\" || month == \"\" || heating == \"\" || batteryCap == \"\" || dod == \"\" || budget == \"\") {\n                modal.style.display = \"block\";\n                update.onclick = function () {\n                    modal.style.display = \"none\";\n                }\n                window.onclick = function (event) {\n                    if (event.target == modal) {\n                        modal.style.display = \"none\";\n                    }\n                }\n            }\n        }\n        function checkingBatteryInputs() {\n            var postalCodeBox = document.getElementById(\"postal-code-input2\");\n            var resultsButton = document.getElementById(\"results-button2\");\n            var postalCode = document.forms[\"battery\"][\"postal_code\"].value;\n            var postalError = false;\n\n            var numErrors = 0;\n\n            var split = [];\n            var i;\n            for (i=0; i<postalCode.length; i++) {\n                split[i] = postalCode.charAt([i]);\n            }\n\n            // checking if user input is a valid postal code\n            if (postalCode.length == 3 && isLetter(split[0]) == true && isNumber(split[1]) == true && isLetter(split[2]) == true) {\n                console.log(\"this is a valid postal code\");\n                postalCodeBox.classList.remove(\"invalid\");\n                postalError = false;\n                numErrors = Math.max(0, numErrors-1);\n            } else {\n                console.log(\"this is NOT a valid postal code\");\n                postalCodeBox.classList.add(\"invalid\");\n                postalError = true;\n                numErrors++;\n            }\n            if (postalCode.length == 0) {\n                postalCodeBox.classList.remove(\"invalid\");\n                postalError = false;\n                numErrors = Math.max(0, numErrors-1);\n            }\n\n            var roofSizeBox = document.getElementById(\"roof-size-input2\");\n            var roofSize = document.forms[\"battery\"][\"roof_size\"].value;\n            var roofError = false;\n\n            // checking to see if user inputted a number for solar roof size and that there is enough space for at least one panel (20sqft)\n            if (Number(roofSize) && Number(roofSize) >= 0) {\n                console.log(\"this is a valid roof size\");\n                roofSizeBox.classList.remove(\"invalid\");\n                roofError = false;\n                numErrors = Math.max(0, numErrors-1);\n            } else {\n                console.log(\"this is not a valid roof size\");\n                roofSizeBox.classList.add(\"invalid\");\n                roofError = true;\n                numErrors++;\n            }\n            if (roofSize.length == 0) {\n                roofSizeBox.classList.remove(\"invalid\");\n                roofError = false;\n                numErrors = Math.max(0, numErrors-1);\n            }\n\n            var usageBox = document.getElementById(\"elec-usage-input2\");\n            var usage = document.forms[\"battery\"][\"elec-usage\"].value;\n            var usageError = false;\n\n            // checking to see if user inputted a number for solar electricy usage is greater than the output of one panel (315w per hour = 0.315 Kw per hour => 0.315 * 5.5 = 1.73KW/Day = 52KW/month)\n            if (Number(usage) && Number(usage) >= 0) {\n                console.log(\"this is a valid usage amount\");\n                usageBox.classList.remove(\"invalid\");\n                usageError = false;\n                numErrors = Math.max(0, numErrors-1);\n            } else {\n                console.log(\"this is not a valid usage amount\");\n                usageBox.classList.add(\"invalid\");\n                usageError = true;\n                numErrors++;\n            }\n            if (usage.length == 0) {\n                usageBox.classList.remove(\"invalid\");\n                usageError = false;\n                numErrors = Math.max(0, numErrors-1);\n            }            \n\n            var storageBox = document.getElementById(\"storage-capacity-input\");\n            var storage = document.forms[\"battery\"][\"storage_capacity\"].value;\n            var storageError = false;\n\n            // checking to see if user inputted a number for battery capacity that is greater or equal to 0\n            if (Number(storage) && Number(storage) >= 0) {\n                console.log(\"this is a valid storage amount\");\n                storageBox.classList.remove(\"invalid\");\n                storageError = false;\n                numErrors = Math.max(0, numErrors-1);\n            } else {\n                console.log(\"this is not a valid usage amount\");\n                storageBox.classList.add(\"invalid\");\n                storageError = true;\n                numErrors++;\n            }\n            if (storage.length == 0) {\n                storageBox.classList.remove(\"invalid\");\n                storageError = false;\n                numErrors = Math.max(0, numErrors-1);\n            } \n\n            var dodBox = document.getElementById(\"dod-input\");\n            var dod = document.forms[\"battery\"][\"dod\"].value;\n            var dodError = false;\n            // checking to see if user inputted a number for dod that is greater or equal to 0\n            if (Number(dod) && Number(dod) >= 0 && Number(dod) <= 100) {\n                console.log(\"this is a valid storage amount\");\n                dodBox.classList.remove(\"invalid\");\n                dodError = false;\n                numErrors = Math.max(0, numErrors-1);\n            } else {\n                console.log(\"this is not a valid usage amount\");\n                dodBox.classList.add(\"invalid\");\n                dodError = true;\n                numErrors++;\n            }\n            if (dod.length == 0) {\n                dodBox.classList.remove(\"invalid\");\n                dodError = false;\n                numErrors = Math.max(0, numErrors-1);\n            } \n\n            var budgetBox = document.getElementById(\"budget2\");\n            var budget = document.forms[\"battery\"][\"budget\"].value;\n            var budgetError = false;\n\n            // checking to see if user inputted a number greater than the cost of one panel + fixed costs\n            if (Number(budget) && Number(budget) >= 0) {\n                console.log(\"this is a valid budget amount\");\n                budgetBox.classList.remove(\"invalid\");\n                budgetError = false;\n                numErrors = Math.max(0, numErrors-1);\n            } else {\n                console.log(\"this is not a valid budget amount\");\n                budgetBox.classList.add(\"invalid\");\n                budgetError = true;\n                numErrors++;\n            }\n            if (budget.length == 0) {\n                budgetBox.classList.remove(\"invalid\");\n                budgetError = false;\n                numErrors = Math.max(0, numErrors-1);\n            }  \n\n            if (postalError == true || roofError == true || usageError == true || budgetError == true || storageError == true || dodError == true) {\n                resultsButton.classList.add(\"disabled-button\");\n            } else {\n                resultsButton.classList.remove(\"disabled-button\");\n            }\n\n            var warning = document.getElementById(\"error-warning\");\n            // moving the warning icon down as the size of the div increases\n            if (numErrors == 3) {\n                warning.classList.remove(\"other-errors\");\n                warning.classList.add(\"three-errors\");\n                warning.classList.remove(\"four-errors\");\n                warning.classList.remove(\"five-errors\");\n                warning.classList.remove(\"six-errors\");\n            } else if (numErrors == 4) {\n                warning.classList.remove(\"other-errors\");\n                warning.classList.remove(\"three-errors\");\n                warning.classList.add(\"four-errors\");\n                warning.classList.remove(\"five-errors\");\n                warning.classList.remove(\"six-errors\");\n            } else if (numErrors == 5) {\n                warning.classList.remove(\"other-errors\");\n                warning.classList.remove(\"three-errors\");\n                warning.classList.remove(\"four-errors\");\n                warning.classList.add(\"five-errors\");\n                warning.classList.remove(\"six-errors\");\n            } else if (numErrors == 6) {\n                warning.classList.remove(\"other-errors\");\n                warning.classList.remove(\"three-errors\");\n                warning.classList.remove(\"four-errors\");\n                warning.classList.remove(\"five-errors\");\n                warning.classList.add(\"six-errors\");\n            } else {\n                warning.classList.add(\"other-errors\");\n                warning.classList.remove(\"three-errors\");\n                warning.classList.remove(\"four-errors\");\n                warning.classList.remove(\"five-errors\");\n                warning.classList.remove(\"six-errors\");\n            }\n        }\n\n        function finalCheckBatteryErrors() {\n            console.log(\"checking errors\");\n            var errorModal = document.getElementById(\"errorModal\");\n            var resultsButton = document.getElementById(\"results-button2\");\n            var postalCodeBox = document.getElementById(\"postal-code-input2\");\n            var roofSizeBox = document.getElementById(\"roof-size-input2\");\n            var usageBox = document.getElementById(\"elec-usage-input2\");\n            var storageBox = document.getElementById(\"storage-capacity-input\");\n            var dodBox = document.getElementById(\"dod-input\");\n            var budgetBox = document.getElementById(\"budget2\");\n            var errorText = document.getElementById(\"error-text\");\n            var update = document.getElementById(\"error-update\");\n\n            if (resultsButton.classList.contains(\"disabled-button\")) {\n                errorModal.style.display = \"block\";\n                // checking for postal code error\n                if (postalCodeBox.classList.contains(\"invalid\")) {\n                    errorText.innerHTML += \"Postal Code needs to be in the form of 'M3N'. <br><br>\"\n                }\n                // checking for roof size error\n                if (roofSizeBox.classList.contains(\"invalid\")) {\n                    errorText.innerHTML += \"Roof Size needs to be a number greater than 0 Sqft. <br><br>\"\n                }\n                // checking for usage error\n                if (usageBox.classList.contains(\"invalid\")) {\n                    errorText.innerHTML += \"Electricity Usage needs to be a number greater 0 kWh. <br><br>\"\n                }\n                // checking for battery capacity error\n                if (storageBox.classList.contains(\"invalid\")) {\n                    errorText.innerHTML += \"Storage Capacity of the battery must be a number greater than 0 kWh. <br><br>\"\n                }\n                // checking for dod error\n                if (dodBox.classList.contains(\"invalid\")) {\n                    errorText.innerHTML += \"Depth of Discharge of the battery must be a number between 0% and 100%. <br><br>\"\n                }\n                // checking for budget error\n                if (budgetBox.classList.contains(\"invalid\")) {\n                    errorText.innerHTML += \"Budget needs to be a number greated than $0.\"\n                }\n                update.onclick = function () {\n                    errorModal.style.display = \"none\";\n                    errorText.innerHTML = \"\";\n                }\n                window.onclick = function (event) {\n                    if (event.target == errorModal) {\n                        errorModal.style.display = \"none\";\n                        errorText.innerHTML = \"\";\n                    }\n                }\n            }\n        }\n        return (\n            <div class=\"Panel\">\n                <nav>\n                    <ul class=\"Tabs\">\n                        <li class=\"Tabs__tab active Tab\" id=\"tabs1\" onClick={() => { showTab(1, 2); }}><a href=\"javascript:;\">Solar</a></li>\n                        <li class=\"Tabs__tab Tab\" id=\"tabs2\" onClick={() => { showTab(2, 2); }}><a href=\"javascript:;\">Solar + Battery</a></li>\n                        <hr id=\"tab-underline\"></hr>\n                        <li class=\"Tabs__presentation-slider\" role=\"presentation\"></li>\n                    </ul>\n                </nav>\n\n\n                <p id=\"solar-subtext\"> I don’t own a home battery </p>\n                <p id=\"battery-subtext\"> I own a home battery </p>\n                <p id=\"form-desc\"> The information you provide will help determine the best solar system specifications for your home.</p>\n                <p id=\"form-desc2\"> In the case where you are not able to retrieve a field, we will use a default value for the analysis.</p>\n\n                {/* {/* Solar Form */}\n\n                <div class=\"Panel__body tabContent\" id=\"tabs-1\">\n\n                    <p class=\"formSectionTitles\" id=\"home-specs\" >Home Specs</p>\n                    <p class=\"formSectionTitles\" id=\"energy-usage\" >Energy Usage</p>\n                    <p class=\"formSectionTitles\" id=\"initial-inv1\" >Initial Investment</p>\n                    <p id=\"postal-text\">We only need the first 3 digits</p>\n                    <div class=\"help-tip\" id=\"q1\">\n                        <p><b>Tip:</b> estimate your roof size by dividing sqaure footage of your home by the number of storeys.</p>\n                    </div>\n                    <div class=\"help-tip\" id=\"q2\">\n                        <p>Select the month your electricity bill is from.</p>\n                    </div>\n                    <div class=\"help-tip\" id=\"q3\">\n                        <p>Input the amount of your total monthly usage as displayed on your electrcity bill for the month.</p>\n                    </div>\n\n                    <form action=\"/solar-results\" name=\"solar\" method=\"POST\" class=\"userform\">\n                        <label>\n                            <p class=\"field-titles\" id=\"postal-code\" > Postal Code:  </p>\n                            <input class=\"field-inputs\" id=\"postal-code-input1\" type=\"text\" name=\"postal_code\" placeholder=\"M3N\" maxlength=\"3\" onBlur={() => { checkingSolarInputs(); }}/>\n                        </label>\n\n                        <label>\n                            <p class=\"field-titles\" id=\"roof-size\" > Roof Size (Sqft):  </p>\n                            <input class=\"field-inputs\" id=\"roof-size-input1\" type=\"text\" name=\"roof_size\" placeholder=\"2000\" onBlur={() => { checkingSolarInputs(); }}/>\n                        </label>\n\n                        <label>\n                            <p class=\"field-titles\" id=\"elec-usage\" > Electricity Usage (kWh):  </p>\n                            <input class=\"field-inputs\" id=\"elec-usage-input1\" type=\"text\" name=\"elec-usage\" placeholder=\"750\" onBlur={() => { checkingSolarInputs(); }}/>\n                        </label>\n\n\n\n                        <label>\n                            <p class=\"field-titles\" id=\"month-title\" > Month:</p>\n                            <select name=\"month\" id=\"month-input1\" class=\"dropdown-inputs\" required>\n                                <option value=\"\" disabled hidden selected>Select month</option>\n                                <option value=\"1\">January</option>\n                                <option value=\"2\">February</option>\n                                <option value=\"3\">March</option>\n                                <option value=\"4\">April</option>\n                                <option value=\"5\">May</option>\n                                <option value=\"6\">June</option>\n                                <option value=\"7\">July</option>\n                                <option value=\"8\">August</option>\n                                <option value=\"9\">September</option>\n                                <option value=\"10\">October</option>\n                                <option value=\"11\">November</option>\n                                <option value=\"12\">December</option>\n                            </select>\n                        </label>\n\n                        <label>\n                            <p class=\"field-titles\" id=\"heating-type-title\" > Type of Heating:</p>\n                            <select name=\"heating-type\" id=\"heating-input1\" class=\"dropdown-inputs\" required>\n                                <option value=\"\" disabled selected hidden>Select heating</option>\n                                <option value=\"1\">Electric</option>\n                                <option value=\"2\">Natural Gas</option>\n                            </select>\n                        </label>\n\n                        <label>\n                            <p class=\"field-titles\" id=\"budget1title\" > Budget (CAD):</p>\n                            <input class=\"field-inputs-budget\" id=\"budget1\" type=\"text\" name=\"budget\" placeholder=\"10000\" onBlur={() => { checkingSolarInputs(); }}/>\n                        </label>\n\n\n                        <div id=\"generate-box\" onMouseOver={() => { finalCheckSolarErrors(); }}>\n                            <input type=\"submit\" class=\"resultsButton\" id=\"results-button1\" value=\"Generate Results\" onMouseOver={() => { checkSolarValues(); }} />\n                        </div>\n                        <form>\n                            <div class=\"value-button\" id=\"decrease\" onClick={() => { decreaseValue(); }} value=\"Decrease Value\">-</div>\n                            <div class=\"value-button\" id=\"increase\" onClick={() => { increaseValue(); }} value=\"Increase Value\">+</div>\n                            <p id=\"dollar-sign1\">$</p>\n                        </form>\n                    </form>\n                </div>\n\n                {/* {/* Solar + Battery Form */}\n                <div class=\"Panel__body tabContent\" id=\"tabs-2\">\n\n                    <p class=\"formSectionTitles\" id=\"home-specs\" >Home Specs</p>\n                    <p class=\"formSectionTitles\" id=\"energy-usage\" >Energy Usage</p>\n                    <p class=\"formSectionTitles\" id=\"initial-inv2\" >Initial Investment</p>\n                    <p class=\"formSectionTitles\" id=\"battery-specs\" >Battery Specs</p>\n                    <p id=\"postal-text\">We only need the first 3 digits</p>\n\n                    <div class=\"help-tip\" id=\"q1\">\n                        <p><b>Tip:</b> estimate your roof size by dividing sqaure footage of your home by the number of storeys.</p>\n                    </div>\n                    <div class=\"help-tip\" id=\"q2\">\n                        <p>Select the month your electricity bill is from.</p>\n                    </div>\n                    <div class=\"help-tip\" id=\"q3\">\n                        <p>Input the amount of your total monthly usage as displayed on your electrcity bill for the month.</p>\n                    </div>\n                    <div class=\"help-tip\" id=\"q4\">\n                        <p>What is the nameplate storage capacity of your home battery?</p>\n                    </div>\n                    <div class=\"help-tip\" id=\"q5\">\n                        <p>The DoD should be listed under your battery specifications.</p>\n                    </div>\n\n                    <form action=\"/solarbattery-results\" method=\"POST\" name=\"battery\" class=\"userform\">\n                        <label>\n                            <p class=\"field-titles\" id=\"postal-code\" > Postal Code:  </p>\n                            <input class=\"field-inputs\" id=\"postal-code-input2\" type=\"text\" name=\"postal_code\" placeholder=\"M3N\" maxlength=\"3\" onBlur={() => { checkingBatteryInputs(); }}/>\n                        </label>\n\n                        <label>\n                            <p class=\"field-titles\" id=\"roof-size\" > Roof Size (Sqft):  </p>\n                            <input class=\"field-inputs\" id=\"roof-size-input2\" type=\"text\" name=\"roof_size\" placeholder=\"2000\" onBlur={() => { checkingBatteryInputs(); }}/>\n                        </label>\n\n                        <label>\n                            <p class=\"field-titles\" id=\"elec-usage\" > Electricity Usage (kWh):  </p>\n                            <input class=\"field-inputs\" id=\"elec-usage-input2\" type=\"text\" name=\"elec-usage\" placeholder=\"750\" onBlur={() => { checkingBatteryInputs(); }}/>\n                        </label>\n\n\n                        <label>\n                            <p class=\"field-titles\" id=\"month-title\" > Month:</p>\n                            <select name=\"month\" id=\"month-input2\" class=\"dropdown-inputs\" required>\n                                <option value=\"\" disabled hidden selected>Select month</option>\n                                <option value=\"1\">January</option>\n                                <option value=\"2\">February</option>\n                                <option value=\"3\">March</option>\n                                <option value=\"4\">April</option>\n                                <option value=\"5\">May</option>\n                                <option value=\"6\">June</option>\n                                <option value=\"7\">July</option>\n                                <option value=\"8\">August</option>\n                                <option value=\"9\">September</option>\n                                <option value=\"10\">October</option>\n                                <option value=\"11\">November</option>\n                                <option value=\"12\">December</option>\n                            </select>\n                        </label>\n\n\n                        <label>\n                            <p class=\"field-titles\" id=\"heating-type-title\" > Type of Heating:</p>\n                            <select name=\"heating-type\" id=\"heating-input2\" class=\"dropdown-inputs\" required>\n                                <option value=\"\" disabled selected hidden>Select heating</option>\n                                <option value=\"1\">Electric</option>\n                                <option value=\"2\">Natural Gas</option>\n                            </select>\n                        </label>\n\n                        <label>\n                            <p class=\"field-titles\" id=\"storage-capacity\" > Storage Capacity (kWh):</p>\n                            <input class=\"field-inputs\" id=\"storage-capacity-input\" type=\"text\" name=\"storage_capacity\" placeholder=\"13\" onBlur={() => { checkingBatteryInputs(); }}/>\n                        </label>\n\n                        <label>\n                            <p class=\"field-titles\" id=\"dod\" > Depth of Discharge:</p>\n                            <input class=\"field-input-dod\" id=\"dod-input\" type=\"text\" name=\"dod\" placeholder=\"80\" maxlength=\"3\" onBlur={() => { checkingBatteryInputs(); }}/>\n                        </label>\n\n                        <label>\n                            <p class=\"field-titles\" id=\"budget2title\" > Budget (CAD):</p>\n                            <input class=\"field-inputs-budget\" id=\"budget2\" type=\"text\" name=\"budget\" placeholder=\"10000\" onBlur={() => { checkingBatteryInputs(); }}/>\n                        </label>\n\n                        <div id=\"generate-box2\" onMouseOver={() => { finalCheckBatteryErrors(); }}>\n                            <input type=\"submit\" class=\"resultsButton\" id=\"results-button2\" value=\"Generate Results\" onMouseOver={() => { checkBatteryValues(); }} />\n                        </div>\n\n                        <form>\n                            <div class=\"value-button\" id=\"decrease2\" onClick={() => { decreaseValue2(); }} value=\"Decrease Value\">-</div>\n                            <div class=\"value-button\" id=\"increase2\" onClick={() => { increaseValue2(); }} value=\"Increase Value\">+</div>\n                            <p id=\"percentage\">%</p>\n                            <p id=\"dollar-sign2\">$</p>\n\n                        </form>\n                    </form>\n                </div>\n\n                <div id=\"solarModal\" class=\"modal\">\n                    <div class=\"modal-content\">\n                        <div id=\"modal-top-border\"></div>\n                        <img src={warning} id=\"warning\" alt=\"warning\"></img>\n                        <p id=\"modal-title\"> Incomplete fields </p>\n                        <p id=\"modal-text\"> You have left one or more fields blank. For best results, please update all fields with your information. Click continue if you are comfortable with the default value(s) being used.</p>\n                        <div id=\"buttondiv\"></div>\n                        <form action=\"/solar-results\" method=\"POST\">\n                            <button id=\"continue\"> Continue</button>\n                        </form>\n                        <button class=\"modalSubmit\" id=\"solar-update\"> Update fields </button>\n                    </div>\n                </div>\n                <div id=\"batteryModal\" class=\"modal\">\n                    <div class=\"modal-content\">\n                        <div id=\"modal-top-border\"></div>\n                        <img src={warning} id=\"warning\" alt=\"warning\"></img>\n                        <p id=\"modal-title\"> Incomplete Fields </p>\n                        <p id=\"modal-text\"> You have left one or more fields blank. For best results, please update all fields with your information. Click continue if you are comfortable with the default value(s) being used.</p>\n                        <div id=\"buttondiv\"></div>\n                        <form action=\"/solarbattery-results\" method=\"POST\">\n                            <button id=\"continue\"> Continue</button>\n                        </form>\n                        <button class=\"modalSubmit\" id=\"battery-update\"> Update fields </button>\n                    </div>\n                </div>\n                <div id=\"errorModal\" class=\"modal\">\n                    <div class=\"error-content\">\n                        <div id=\"modal-top-border\"></div>\n                        <p id=\"error-title\"> Invalid Input(s)</p>\n                        <div class=\"error-container\">\n                            <div id=\"left\">\n                                <img src={warning} class=\"other-errors\" id=\"error-warning\" alt=\"warning\"></img>\n                            </div>\n                            <div id=\"right\">\n                                <p id=\"error-text\"></p>\n                            </div>\n                            <div id=\"error-buttondiv\">\n                                <button class=\"modalSubmit\" id=\"error-update\"> Update fields </button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                \n\n            </div>\n        )\n    }\n}\n\nexport default startSaving",["117","118"],"/Users/Ghazal/Desktop/fydp-app/src/components/Footer.js",["119","120"],"/Users/Ghazal/Desktop/fydp-app/src/components/Accordion.js",["121","122","123","124"],"/Users/Ghazal/Desktop/fydp-app/src/components/faqData.js",[],{"ruleId":"125","severity":1,"message":"126","line":1,"column":17,"nodeType":"127","messageId":"128","endLine":1,"endColumn":25},{"ruleId":"125","severity":1,"message":"129","line":1,"column":27,"nodeType":"127","messageId":"128","endLine":1,"endColumn":36},{"ruleId":"125","severity":1,"message":"130","line":9,"column":17,"nodeType":"127","messageId":"128","endLine":9,"endColumn":21},{"ruleId":"131","severity":1,"message":"132","line":19,"column":48,"nodeType":"133","messageId":"134","endLine":19,"endColumn":50},{"ruleId":"131","severity":1,"message":"132","line":25,"column":54,"nodeType":"133","messageId":"134","endLine":25,"endColumn":56},{"ruleId":"131","severity":1,"message":"132","line":31,"column":56,"nodeType":"133","messageId":"134","endLine":31,"endColumn":58},{"ruleId":"125","severity":1,"message":"135","line":2,"column":8,"nodeType":"127","messageId":"128","endLine":2,"endColumn":15},{"ruleId":"131","severity":1,"message":"132","line":31,"column":27,"nodeType":"133","messageId":"134","endLine":31,"endColumn":29},{"ruleId":"125","severity":1,"message":"136","line":96,"column":17,"nodeType":"127","messageId":"128","endLine":96,"endColumn":20},{"ruleId":"131","severity":1,"message":"132","line":105,"column":28,"nodeType":"133","messageId":"134","endLine":105,"endColumn":30},{"ruleId":"131","severity":1,"message":"132","line":105,"column":46,"nodeType":"133","messageId":"134","endLine":105,"endColumn":48},{"ruleId":"131","severity":1,"message":"132","line":105,"column":65,"nodeType":"133","messageId":"134","endLine":105,"endColumn":67},{"ruleId":"131","severity":1,"message":"132","line":105,"column":80,"nodeType":"133","messageId":"134","endLine":105,"endColumn":82},{"ruleId":"131","severity":1,"message":"132","line":105,"column":97,"nodeType":"133","messageId":"134","endLine":105,"endColumn":99},{"ruleId":"131","severity":1,"message":"132","line":105,"column":113,"nodeType":"133","messageId":"134","endLine":105,"endColumn":115},{"ruleId":"131","severity":1,"message":"132","line":111,"column":38,"nodeType":"133","messageId":"134","endLine":111,"endColumn":40},{"ruleId":"131","severity":1,"message":"132","line":137,"column":35,"nodeType":"133","messageId":"134","endLine":137,"endColumn":37},{"ruleId":"131","severity":1,"message":"132","line":137,"column":62,"nodeType":"133","messageId":"134","endLine":137,"endColumn":64},{"ruleId":"131","severity":1,"message":"132","line":137,"column":92,"nodeType":"133","messageId":"134","endLine":137,"endColumn":94},{"ruleId":"131","severity":1,"message":"132","line":137,"column":122,"nodeType":"133","messageId":"134","endLine":137,"endColumn":124},{"ruleId":"131","severity":1,"message":"132","line":148,"column":35,"nodeType":"133","messageId":"134","endLine":148,"endColumn":37},{"ruleId":"131","severity":1,"message":"132","line":170,"column":33,"nodeType":"133","messageId":"134","endLine":170,"endColumn":35},{"ruleId":"131","severity":1,"message":"132","line":192,"column":30,"nodeType":"133","messageId":"134","endLine":192,"endColumn":32},{"ruleId":"131","severity":1,"message":"132","line":214,"column":31,"nodeType":"133","messageId":"134","endLine":214,"endColumn":33},{"ruleId":"131","severity":1,"message":"132","line":220,"column":29,"nodeType":"133","messageId":"134","endLine":220,"endColumn":31},{"ruleId":"131","severity":1,"message":"132","line":220,"column":50,"nodeType":"133","messageId":"134","endLine":220,"endColumn":52},{"ruleId":"131","severity":1,"message":"132","line":220,"column":72,"nodeType":"133","messageId":"134","endLine":220,"endColumn":74},{"ruleId":"131","severity":1,"message":"132","line":220,"column":95,"nodeType":"133","messageId":"134","endLine":220,"endColumn":97},{"ruleId":"131","severity":1,"message":"132","line":228,"column":27,"nodeType":"133","messageId":"134","endLine":228,"endColumn":29},{"ruleId":"131","severity":1,"message":"132","line":232,"column":34,"nodeType":"133","messageId":"134","endLine":232,"endColumn":36},{"ruleId":"131","severity":1,"message":"132","line":277,"column":38,"nodeType":"133","messageId":"134","endLine":277,"endColumn":40},{"ruleId":"131","severity":1,"message":"132","line":299,"column":28,"nodeType":"133","messageId":"134","endLine":299,"endColumn":30},{"ruleId":"131","severity":1,"message":"132","line":299,"column":46,"nodeType":"133","messageId":"134","endLine":299,"endColumn":48},{"ruleId":"131","severity":1,"message":"132","line":299,"column":65,"nodeType":"133","messageId":"134","endLine":299,"endColumn":67},{"ruleId":"131","severity":1,"message":"132","line":299,"column":80,"nodeType":"133","messageId":"134","endLine":299,"endColumn":82},{"ruleId":"131","severity":1,"message":"132","line":299,"column":97,"nodeType":"133","messageId":"134","endLine":299,"endColumn":99},{"ruleId":"131","severity":1,"message":"132","line":299,"column":117,"nodeType":"133","messageId":"134","endLine":299,"endColumn":119},{"ruleId":"131","severity":1,"message":"132","line":299,"column":130,"nodeType":"133","messageId":"134","endLine":299,"endColumn":132},{"ruleId":"131","severity":1,"message":"132","line":299,"column":146,"nodeType":"133","messageId":"134","endLine":299,"endColumn":148},{"ruleId":"131","severity":1,"message":"132","line":305,"column":38,"nodeType":"133","messageId":"134","endLine":305,"endColumn":40},{"ruleId":"131","severity":1,"message":"132","line":326,"column":35,"nodeType":"133","messageId":"134","endLine":326,"endColumn":37},{"ruleId":"131","severity":1,"message":"132","line":326,"column":62,"nodeType":"133","messageId":"134","endLine":326,"endColumn":64},{"ruleId":"131","severity":1,"message":"132","line":326,"column":92,"nodeType":"133","messageId":"134","endLine":326,"endColumn":94},{"ruleId":"131","severity":1,"message":"132","line":326,"column":122,"nodeType":"133","messageId":"134","endLine":326,"endColumn":124},{"ruleId":"131","severity":1,"message":"132","line":337,"column":35,"nodeType":"133","messageId":"134","endLine":337,"endColumn":37},{"ruleId":"131","severity":1,"message":"132","line":359,"column":33,"nodeType":"133","messageId":"134","endLine":359,"endColumn":35},{"ruleId":"131","severity":1,"message":"132","line":381,"column":30,"nodeType":"133","messageId":"134","endLine":381,"endColumn":32},{"ruleId":"131","severity":1,"message":"132","line":403,"column":32,"nodeType":"133","messageId":"134","endLine":403,"endColumn":34},{"ruleId":"131","severity":1,"message":"132","line":424,"column":28,"nodeType":"133","messageId":"134","endLine":424,"endColumn":30},{"ruleId":"131","severity":1,"message":"132","line":446,"column":31,"nodeType":"133","messageId":"134","endLine":446,"endColumn":33},{"ruleId":"131","severity":1,"message":"132","line":452,"column":29,"nodeType":"133","messageId":"134","endLine":452,"endColumn":31},{"ruleId":"131","severity":1,"message":"132","line":452,"column":50,"nodeType":"133","messageId":"134","endLine":452,"endColumn":52},{"ruleId":"131","severity":1,"message":"132","line":452,"column":72,"nodeType":"133","messageId":"134","endLine":452,"endColumn":74},{"ruleId":"131","severity":1,"message":"132","line":452,"column":95,"nodeType":"133","messageId":"134","endLine":452,"endColumn":97},{"ruleId":"131","severity":1,"message":"132","line":452,"column":119,"nodeType":"133","messageId":"134","endLine":452,"endColumn":121},{"ruleId":"131","severity":1,"message":"132","line":452,"column":139,"nodeType":"133","messageId":"134","endLine":452,"endColumn":141},{"ruleId":"131","severity":1,"message":"132","line":460,"column":27,"nodeType":"133","messageId":"134","endLine":460,"endColumn":29},{"ruleId":"131","severity":1,"message":"132","line":466,"column":34,"nodeType":"133","messageId":"134","endLine":466,"endColumn":36},{"ruleId":"131","severity":1,"message":"132","line":472,"column":34,"nodeType":"133","messageId":"134","endLine":472,"endColumn":36},{"ruleId":"131","severity":1,"message":"132","line":478,"column":34,"nodeType":"133","messageId":"134","endLine":478,"endColumn":36},{"ruleId":"131","severity":1,"message":"132","line":537,"column":38,"nodeType":"133","messageId":"134","endLine":537,"endColumn":40},{"ruleId":"137","severity":1,"message":"138","line":548,"column":104,"nodeType":"139","endLine":548,"endColumn":127},{"ruleId":"140","severity":1,"message":"141","line":548,"column":112,"nodeType":"142","messageId":"143","endLine":548,"endColumn":126},{"ruleId":"137","severity":1,"message":"138","line":549,"column":97,"nodeType":"139","endLine":549,"endColumn":120},{"ruleId":"140","severity":1,"message":"141","line":549,"column":105,"nodeType":"142","messageId":"143","endLine":549,"endColumn":119},{"ruleId":"144","replacedBy":"145"},{"ruleId":"146","replacedBy":"147"},{"ruleId":"137","severity":1,"message":"148","line":10,"column":21,"nodeType":"139","endLine":10,"endColumn":24},{"ruleId":"137","severity":1,"message":"148","line":11,"column":21,"nodeType":"139","endLine":11,"endColumn":24},{"ruleId":"125","severity":1,"message":"149","line":1,"column":17,"nodeType":"127","messageId":"128","endLine":1,"endColumn":26},{"ruleId":"125","severity":1,"message":"150","line":2,"column":8,"nodeType":"127","messageId":"128","endLine":2,"endColumn":15},{"ruleId":"125","severity":1,"message":"151","line":3,"column":8,"nodeType":"127","messageId":"128","endLine":3,"endColumn":20},{"ruleId":"125","severity":1,"message":"152","line":4,"column":8,"nodeType":"127","messageId":"128","endLine":4,"endColumn":18},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'home' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'graphic' is defined but never used.","'nav' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-script-url","Script URL is a form of eval.","Literal","unexpectedScriptURL","no-native-reassign",["153"],"no-negated-in-lhs",["154"],"The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'Component' is defined but never used.","'faqData' is defined but never used.","'faqArrowDown' is defined but never used.","'faqArrowUp' is defined but never used.","no-global-assign","no-unsafe-negation"]